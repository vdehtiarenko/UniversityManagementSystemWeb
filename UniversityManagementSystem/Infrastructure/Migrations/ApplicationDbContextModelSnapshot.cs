// <auto-generated />
using System;
using Infrastructure.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Entities.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = new Guid("b10e1d67-3f77-4a43-9e6f-1cfe8d09fba4"),
                            Description = "Fundamentals of computer science and modern information technologies.",
                            Name = "Computer Science and Information Technology"
                        },
                        new
                        {
                            CourseId = new Guid("9d28bdbc-cda2-4d4b-b421-16db5de017cf"),
                            Description = "Design, development, and maintenance of software systems.",
                            Name = "Software Engineering"
                        },
                        new
                        {
                            CourseId = new Guid("e18f0912-62a1-448e-9332-bdb04c3e46b5"),
                            Description = "Principles and practices of protecting systems, networks, and programs from cyber attacks.",
                            Name = "Cybersecurity"
                        },
                        new
                        {
                            CourseId = new Guid("c5fbb908-4f91-4b1a-a9e6-4df5b1f0f7b4"),
                            Description = "Development and management of information systems and digital technologies.",
                            Name = "Information Systems and Technology"
                        },
                        new
                        {
                            CourseId = new Guid("8a5fcac4-3e4c-4c66-bd7f-5f2f909d2a4d"),
                            Description = "AI principles, algorithms, and practical applications of machine learning.",
                            Name = "Artificial Intelligence and Machine Learning"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Group", b =>
                {
                    b.Property<Guid>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.HasIndex("CourseId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            GroupId = new Guid("f06c2b13-5d3c-4bfb-9c8f-81968b1c43b7"),
                            CourseId = new Guid("b10e1d67-3f77-4a43-9e6f-1cfe8d09fba4"),
                            Name = "CS-101"
                        },
                        new
                        {
                            GroupId = new Guid("fdba714b-5b56-4b07-9e93-541fc57f2b85"),
                            CourseId = new Guid("9d28bdbc-cda2-4d4b-b421-16db5de017cf"),
                            Name = "SE-201"
                        },
                        new
                        {
                            GroupId = new Guid("c80e2b37-2b72-4d7f-8a9f-1a2b73f9f0d1"),
                            CourseId = new Guid("e18f0912-62a1-448e-9332-bdb04c3e46b5"),
                            Name = "CY-301"
                        },
                        new
                        {
                            GroupId = new Guid("d67cba09-45a7-4f2b-9c5b-8a0f8d4e6e6f"),
                            CourseId = new Guid("c5fbb908-4f91-4b1a-a9e6-4df5b1f0f7b4"),
                            Name = "IT-401"
                        },
                        new
                        {
                            GroupId = new Guid("b82f93c2-6e1b-4a66-b3c1-3a6f34f1d6d7"),
                            CourseId = new Guid("8a5fcac4-3e4c-4c66-bd7f-5f2f909d2a4d"),
                            Name = "AI-501"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("b6a3c8f5-3a4f-4c66-8a4b-5d2f9f1c6a1a"),
                            FirstName = "Alice",
                            GroupId = new Guid("f06c2b13-5d3c-4bfb-9c8f-81968b1c43b7"),
                            LastName = "Johnson"
                        },
                        new
                        {
                            StudentId = new Guid("d2b1f9e2-8a0f-4a7b-9c5b-6e4e6f8d3c5b"),
                            FirstName = "Bob",
                            GroupId = new Guid("f06c2b13-5d3c-4bfb-9c8f-81968b1c43b7"),
                            LastName = "Smith"
                        },
                        new
                        {
                            StudentId = new Guid("e3f9d6b2-7c5b-4a0f-8a9b-1a2f4e7b9d6c"),
                            FirstName = "Charlie",
                            GroupId = new Guid("fdba714b-5b56-4b07-9e93-541fc57f2b85"),
                            LastName = "Davis"
                        },
                        new
                        {
                            StudentId = new Guid("c7d6f8b9-4a0f-5b7c-2b1a-6e9b4e7f3c2d"),
                            FirstName = "Dave",
                            GroupId = new Guid("fdba714b-5b56-4b07-9e93-541fc57f2b85"),
                            LastName = "Wilson"
                        },
                        new
                        {
                            StudentId = new Guid("f2b1a9b6-4e7b-6c5d-3a0f-9d4c2e7f8b5a"),
                            FirstName = "Eve",
                            GroupId = new Guid("fdba714b-5b56-4b07-9e93-541fc57f2b85"),
                            LastName = "Taylor"
                        },
                        new
                        {
                            StudentId = new Guid("a9b6f7c5-2b1a-4e7d-3a0f-6e9c2f4d8b5a"),
                            FirstName = "Frank",
                            GroupId = new Guid("c80e2b37-2b72-4d7f-8a9f-1a2b73f9f0d1"),
                            LastName = "Brown"
                        },
                        new
                        {
                            StudentId = new Guid("f4e7c5b6-2b1a-3a0f-9d6e-9b4d8b5a7f2b"),
                            FirstName = "Grace",
                            GroupId = new Guid("c80e2b37-2b72-4d7f-8a9f-1a2b73f9f0d1"),
                            LastName = "Miller"
                        },
                        new
                        {
                            StudentId = new Guid("d9f8b7c6-4a0f-2b1a-6e7d-3c4e5f9a8b5b"),
                            FirstName = "Henry",
                            GroupId = new Guid("d67cba09-45a7-4f2b-9c5b-8a0f8d4e6e6f"),
                            LastName = "Clark"
                        },
                        new
                        {
                            StudentId = new Guid("e7b9c6f5-2a1a-4d3c-0f6e-8b5a7f4b9d6c"),
                            FirstName = "Ivy",
                            GroupId = new Guid("d67cba09-45a7-4f2b-9c5b-8a0f8d4e6e6f"),
                            LastName = "Moore"
                        },
                        new
                        {
                            StudentId = new Guid("f8c7b6a9-2b1a-4d3c-0f6e-5b4e7f9d6a5b"),
                            FirstName = "Jack",
                            GroupId = new Guid("b82f93c2-6e1b-4a66-b3c1-3a6f34f1d6d7"),
                            LastName = "Evans"
                        },
                        new
                        {
                            StudentId = new Guid("a6b7c8d9-2f1a-4e3d-0b5f-7f4e9d5c6a8b"),
                            FirstName = "Kate",
                            GroupId = new Guid("b82f93c2-6e1b-4a66-b3c1-3a6f34f1d6d7"),
                            LastName = "Adams"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Group", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Course", null)
                        .WithMany("Groups")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplicationCore.Entities.Student", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Group", null)
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplicationCore.Entities.Course", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Group", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
